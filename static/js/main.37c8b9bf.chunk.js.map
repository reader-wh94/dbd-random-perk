{"version":3,"sources":["component/SurvivorPerk.js","component/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","styled","div","Hr","hr","Text","Perk","Item","AddOn","PerkButton","button","lighten","darken","SurvivorPerk","perks","data","perksNum","length","items","itemsNum","addOns","addOnsNum","useState","perkData","setPerkData","itemData","setItemData","addOnData","setAddOnData","getRandom","totalIndex","selectNumber","randomArray","i","randomNumber","Math","floor","random","indexOf","push","SelectPerks","item","array","map","detail","index","className","src","url","alt","name","onClick","Basic","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37c8b9bf.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport data from './Survivor.json';\r\nimport styled from 'styled-components';\r\nimport { darken, lighten } from 'polished';\r\n\r\nfunction SurvivorPerk() {\r\n  const perks = data.perks;\r\n  const perksNum = perks.length;\r\n  const items = data.items;\r\n  const itemsNum = items.length;\r\n  const addOns = data.addOns;\r\n  const addOnsNum = addOns.length;\r\n  let [perkData, setPerkData] = useState();\r\n  let [itemData, setItemData] = useState();\r\n  let [addOnData, setAddOnData] = useState();\r\n\r\n  function getRandom(totalIndex, selectNumber) {\r\n    let randomArray = [];\r\n    for (let i = 0; i < selectNumber; i++) {\r\n      let randomNumber = Math.floor(Math.random() * totalIndex);\r\n      if(randomArray.indexOf(randomNumber) === -1) {\r\n        randomArray.push(randomNumber);\r\n      } else {\r\n        i--;\r\n      }\r\n    }\r\n    return randomArray;\r\n  }\r\n\r\n  function SelectPerks(item) {\r\n    if(item === 'perk') {\r\n      let array = getRandom(perksNum, 4);\r\n\r\n      setPerkData(array.map((detail, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <div>\r\n              <img className=\"perkImg\" src={perks[detail].url} alt=\"pic\" />\r\n            </div>\r\n            <span className=\"perkName\">{perks[detail].name}</span>\r\n          </div>\r\n        );\r\n      }));\r\n    } else if (item === 'item') {\r\n      let array = getRandom(itemsNum, 1);\r\n\r\n      setItemData(array.map((detail, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <div>\r\n              <img className=\"itemImg\" src={items[detail].url} alt=\"pic\" />\r\n            </div>\r\n            <span className=\"itemName\">{items[detail].name}</span>\r\n          </div>\r\n        );\r\n      }));\r\n    } else if(item === 'addon') {\r\n      let array = getRandom(addOnsNum, 2);\r\n\r\n      setAddOnData(array.map((detail, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <div>\r\n              <img className=\"addOnImg\" src={addOns[detail].url} alt=\"pic\" />\r\n            </div>\r\n            <span className=\"addOnName\">{addOns[detail].name}</span>\r\n          </div>\r\n        );\r\n      }));\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Home>\r\n      <Text>\r\n        <h2>Random Perk</h2>\r\n        <PerkButton onClick={() => SelectPerks('perk')}>\r\n          Click\r\n        </PerkButton>\r\n      </Text>\r\n      <Perk>\r\n        {perkData}\r\n      </Perk>\r\n      <Hr />\r\n      <Text>\r\n        <h2>Random Item</h2>\r\n        <PerkButton onClick={() => SelectPerks('item')}>\r\n          Click\r\n        </PerkButton>\r\n      </Text>\r\n      <Item>\r\n        {itemData}\r\n      </Item>\r\n      <Hr />\r\n      <Text>\r\n        <h2>Random AddOns</h2>\r\n        <PerkButton onClick={() => SelectPerks('addon')}>\r\n          Click\r\n        </PerkButton>\r\n      </Text>\r\n      <AddOn>\r\n        {addOnData}\r\n      </AddOn>\r\n    </Home>\r\n  );\r\n}\r\n\r\nconst Home = styled.div`\r\n  display: block;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  color: #e38842;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst Hr = styled.hr`\r\n  text-align: center;\r\n  width: 70rem;\r\n  border-bottom: 1px dashed #ccc;\r\n  background: #999;\r\n  }\r\n`;\r\n\r\nconst Text = styled.div`\r\n  display: block;\r\n`;\r\n\r\nconst Perk = styled.div`\r\n  display: inline-box;\r\n  margin-bottom: 2rem;\r\n\r\n  .perkName {\r\n    font-size: 1.3rem;\r\n    color: #dcccff;\r\n  }\r\n\r\n  .perkImg {\r\n    margin-right: 0.5rem;\r\n    height: 15rem;\r\n  }\r\n`;\r\n\r\nconst Item = styled.div`\r\n  margin-bottom: 2rem;\r\n\r\n  .itemName {\r\n    font-size: 1.3rem;\r\n    color: #dcccff;\r\n  }\r\n\r\n  .itemImg {\r\n    height: 14rem;\r\n  }\r\n`;\r\n\r\nconst AddOn = styled.div`\r\n  display: inline-box;\r\n  margin-bottom: 2rem;\r\n\r\n  .addOnName {\r\n    font-size: 1.3rem;\r\n    color: #dcccff;\r\n  }\r\n\r\n  .addOnImg {\r\n    height: 14rem;\r\n  }\r\n`;\r\n\r\nconst PerkButton = styled.button`\r\n  /* 공통 스타일 */\r\n  display: box;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n  margin-top: 0.5rem;\r\n  margin-bottom: 1rem;\r\n\r\n  /* 크기 */\r\n  height: 2rem;\r\n  font-size: 1.5rem;\r\n\r\n  /* 색상 */\r\n  background: #228be6;\r\n  &:hover {\r\n    background: ${lighten(0.1, '#228be6')};\r\n  }\r\n  &:active {\r\n    background: ${darken(0.1, '#228be6')};\r\n  }\r\n\r\n  /* 기타 */\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport default SurvivorPerk;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport SurvivorPerk from './SurvivorPerk';\r\n\r\nfunction Home() {\r\n  return (\r\n    <Basic>\r\n      <h1>Dead By Daylight random perk</h1>\r\n      <br />\r\n      <SurvivorPerk />\r\n    </Basic>\r\n  );\r\n}\r\n\r\nconst Basic = styled.div`\r\n  text-align: center;\r\n`;\r\nexport default Home;","import Home from './component/Home';\nimport styles from './App.css';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}